version: "3.4"

services:
  redis:
    image: redis:7
    restart: always
    hostname: redis
    networks:
      - booking-backend-app
    container_name: redis
    volumes:
      - booking-redis:/data
    ports:
      - '6379:6379'

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    hostname: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=hoangnhat
      - MYSQL_DATABASE=backend-drivor
    ports:
      - '3306:3306'
    networks:
      - booking-backend-app
    volumes:
      - data:/var/lib/mysql
      - ./src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  elasticsearch:
    container_name: elastic_search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
    hostname: elasticsearch
    networks:
      - booking-backend-app
    volumes:
      - booking-es:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  rabbitmq:
    image: rabbitmq:3
    restart: always
    container_name: rabbitmq
    hostname: rabbitmq
    networks:
      - booking-backend-app
    ports:
      - "5672:5672"
      - "15672:15672"

  booking-backend:
    container_name: booking-backend
    image: nhathoang07/booking-backend:v1
    environment:
      - DB_URL=mysql
      - DB_PORT=3306
      - DB_NAME=backend-drivor
      - DB_USER=root
      - DB_PASSWORD=hoangnhat
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=15672
      - MAIL_USERNAME=nhathv@beetsoft.com.vn
      - MAIL_PASSWORD=xnhtcgjdtmstjiwl
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - ES_URL=elasticsearch:9200
      - ES_USERNAME=admin
      - ES_PASSWORD=admin
      - ES_INDEX=booking
    ports:
      - "8181:8080"
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - elasticsearch
    networks:
      - booking-backend-app
volumes:
  booking-redis:
    driver: local
  booking-es:
    driver: local
  data:
    driver: local

networks:
  booking-backend-app:
    driver: bridge
