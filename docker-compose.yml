version: "3.4"

services:
  redis:
    image: redis:7
    restart: always
    networks:
      - booking-backend-app
    container_name: redis
    volumes:
      - booking-redis:/data
    ports:
      - '6379:6379'

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=hoangnhat
      - MYSQL_DATABASE=backend-drivor
    ports:
      - '3306:3306'
    networks:
      - booking-backend-app
    volumes:
      - data:/var/lib/mysql
      - ./src/main/resources/db/booking.sql:/data/application/booking.sql
    command: --init-file /data/application/booking.sql

  elasticsearch:
    container_name: elastic_search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
    networks:
      - booking-backend-app
    volumes:
      - booking-es:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  rabbitmq:
    image: rabbitmq:3
    restart: always
    container_name: rabbitmq
    networks:
      - booking-backend-app
    ports:
      - "5672:5672"
      - "15672:15672"

#  booking-backend:
#    container_name: booking-backend
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    env_file:
#      - ./.env
#    environment:
#      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
#    ports:
#      - "8181:8080"
#    depends_on:
#      - mysql
#      - redis
#      - rabbitmq
#      - elasticsearch
#    networks:
#      - booking-backend-app
volumes:
  booking-redis:
    driver: local
  booking-es:
    driver: local
  data:
    driver: local

networks:
  booking-backend-app:
    driver: bridge